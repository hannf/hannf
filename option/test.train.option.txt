#
# Copyright (C) 2017  Jaroslaw Piwonski, CAU, jpi@informatik.uni-kiel.de
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# debug
-HANNFDebug                       1

# network
-HANNFType                        mlp
# i/o
-HANNFInputNeuronCount            19
-HANNFOutputNeuronCount           12
# hidden layers
-HANNFHiddenLayerCount            1
-HANNFHiddenLayerNeuronCount      3
#-HANNFHiddenLayerCount            3
#-HANNFHiddenLayerNeuronCount      300,400,500
#-HANNFHiddenLayerNeuronCount      3,4,5

# training
-HANNFTrainingDataInput            ../data/sensor_data_short.feature.petsc
-HANNFTrainingDataOutput           ../data/sensor_data_short.class.petsc

# training, optimization
-HANNF_tao_type                   cg
-HANNF_tao_monitor
-HANNF_tao_max_it                 1
-HANNF_tao_max_funcs              1










# training result
#-HANNFOutputDirectory             work/
#-HANNFTrainingDataInput            data/sensor_data_short.petsc
#-HANNFDebug                      1
#
## type
#-HANNFType                        mlp
## I/O
#-HANNFInputNeuronCount           19
#-HANNFOutputNeuronCount          12
## hidden/state layers
#-HANNFHiddenLayerCount           1
#-HANNFHiddenLayerNeuronCount     3
##-HANNFHiddenLayerCount           3
##-HANNFHiddenLayerNeuronCount     300,400,500
##-HANNFHiddenLayerNeuronCount     3,4,5
#
## training data
## sequence length is determined automatically
#-HANNFTrainingData               data/sensor_data_short.petsc
#
## training result
##-HANNFOutputDirectory            work/
#-HANNFRecurrent          Elman
#-HANNFRecurrent          Jordan
#-HANNFHiddenLayerCount           3
#-HANNFHiddenLayerNeuronCount     3,4,5
# training, sizes are deterimined auotmatically
#-HANNFTrainingInputData          data/feature.petsc
#-HANNFTrainingOutputData         data/class.petsc
## training, optimization
#-hannf_tao_type                 tao_cg
#-hannf_tao_monitor
#-HANNFHiddenLayerCount            0



